# Generated by Django 5.2 on 2025-08-22 15:33

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Airline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(help_text='IATA airline code', max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('country', models.CharField(max_length=100)),
                ('airport_code', models.CharField(help_text='IATA airport code', max_length=3, null=True, unique=True)),
                ('best_link', models.URLField(blank=True, null=True)),
                ('week_get_links', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flight_number', models.CharField(max_length=10, unique=True)),
                ('departure_time', models.TimeField()),
                ('arrival_time', models.TimeField()),
                ('flight_date', models.DateField()),
                ('economy_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('business_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_seats', models.PositiveIntegerField()),
                ('available_seats', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('DELAYED', 'Delayed'), ('CANCELLED', 'Cancelled'), ('BOARDING', 'Boarding'), ('DEPARTED', 'Departed'), ('ARRIVED', 'Arrived')], default='SCHEDULED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('airline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travelapp.airline')),
                ('destination_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arriving_flights', to='travelapp.city')),
                ('source_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departing_flights', to='travelapp.city')),
            ],
            options={
                'ordering': ['flight_date', 'departure_time'],
                'unique_together': {('flight_number', 'flight_date')},
            },
        ),
        migrations.CreateModel(
            name='FlightBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_reference', models.CharField(max_length=10, unique=True)),
                ('passenger_count', models.PositiveIntegerField(default=1)),
                ('travel_class', models.CharField(choices=[('ECONOMY', 'Economy'), ('BUSINESS', 'Business')], default='ECONOMY', max_length=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='travelapp.flight')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flight_bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-booking_date'],
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('star_rating', models.PositiveIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('amenities', models.TextField(help_text='Comma-separated list of amenities')),
                ('distance_from_airport', models.DecimalField(blank=True, decimal_places=2, help_text='Distance in kilometers', max_digits=5, null=True)),
                ('total_rooms', models.PositiveIntegerField()),
                ('available_rooms', models.PositiveIntegerField()),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='hotels/')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotels', to='travelapp.city')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HotelBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_reference', models.CharField(max_length=10, unique=True)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('rooms_count', models.PositiveIntegerField(default=1)),
                ('guests_count', models.PositiveIntegerField(default=1)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled'), ('CHECKED_IN', 'Checked In'), ('CHECKED_OUT', 'Checked Out')], default='PENDING', max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='travelapp.hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-booking_date'],
            },
        ),
        migrations.CreateModel(
            name='PackageBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_reference', models.CharField(max_length=10, unique=True)),
                ('package_discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount percentage', max_digits=5)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('flight_booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='travelapp.flightbooking')),
                ('hotel_booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='travelapp.hotelbooking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-booking_date'],
            },
        ),
        migrations.CreateModel(
            name='BookingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('CREDIT_CARD', 'Credit Card'), ('DEBIT_CARD', 'Debit Card'), ('PAYPAL', 'PayPal'), ('BANK_TRANSFER', 'Bank Transfer')], max_length=20)),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('flight_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travelapp.flightbooking')),
                ('hotel_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travelapp.hotelbooking')),
                ('package_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travelapp.packagebooking')),
            ],
        ),
        migrations.CreateModel(
            name='TouristAttraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('HISTORICAL', 'Historical Site'), ('MUSEUM', 'Museum'), ('PARK', 'Park/Garden'), ('RELIGIOUS', 'Religious Site'), ('ENTERTAINMENT', 'Entertainment'), ('SHOPPING', 'Shopping'), ('RESTAURANT', 'Restaurant'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='attractions/')),
                ('address', models.TextField(blank=True)),
                ('opening_hours', models.CharField(blank=True, max_length=200)),
                ('entry_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attractions', to='travelapp.city')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
